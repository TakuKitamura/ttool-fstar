<!--<div class="summary">
This is how to show a summary of a page. For example. Of course. It's merely a highlighted box...
</div>-->

<h1>Support: Requested Functionalities (since 2009)</h1>

<br>
<br>
To ask for a new functionality, please, do send an email (provided in the <a href="./contact.html">contact section</a>) with a clear explanation this functionality.
<br>
<br>
<br>
<hr>

<h2 id="func"> Requested Functionalities (2016) </h2>
<ul> 
<li> <b>Req #035</b> (Jan., 27, 2016) Opening a referenced elt (e.g, an impact link in a MAD) with a double-click.</li>
<br>
</ul>


<h2 id="func"> Requested Functionalities (2015) </h2>
<ul> 
<li> <b>Req #034</b> (Aug., 25, 2015) Add a scrolling meachnism on the diagram borders when zooming or selecting diagrams elements.</li>
<br>
<li> <b>Req #033</b> (March, 13, 2015) AVATAR methodology: when modifying the name of a diagram, update the reference to diagrams in the methodology as well.</li>
<br>
<li> <b>Req #032</b> (March, 12, 2015) AVATAR assumption diagrams: be able to reference a given "Avatar Design Diagram" (and not only its main tab).</li>
<br>
<li> <b>Req #031</b> (March, 12, 2015) AVATAR design diagrams: be able to rename "Avatar Design Diagram" in something else. Actually, I am not really in favor of this, since there is already a name provided to the diagram in the main tab of the diagram.</li>
<br>
</ul>


<h2 id="func"> Requested Functionalities (2014) </h2>
<ul> 
<li> <b>Req #030</b> (October, 10, 2014) AVATAR requirements diagrams: it could be interesting to automatically add a unique requirement didentifier when adding a new requirement. By unique, we mean unique in all requirement diagrams of the opened model.</li>
<br>
</ul>

<h2 id="func"> Requested Functionalities (2012) </h2>
<ul> 
<li><b>Req #029</b> (Dec., 6, 2012) AVATAR design diagrams: adding an any state, i.e. a state from which all subsequent transiations can be taken from any other states of the state machine.</li>
<br>
<li><b>Req #028</b> (Dec., 6, 2012) AVATAR design diagrams: propose an icon to automatically remove used signals and variables.</li>
<br>
<li> <b>Req #027</b> (March, 22, 2012) AVATAR analysis diagrams: it could be interesting to automatically add a start state to Interaction Overviw Diagrams when the latter is created. Is this diagram obligatory? (currently, yes!).</li>
<br>
</ul>


<h2 id="func"> Requested Functionalities (2011) </h2>
<ul> 
<li> <b>Req #026</b> (May, 9, 2011) AVATAR block diagrams: support of String attributes.</li>
<br>
<li> <b>Req #025</b> (May, 9, 2011) AVATAR block diagrams: support for multiplicities on composition operators, and support of roles on composition operators.</li>
<br>
<li> <b><strike>Req #024</strike></b> (March, 4, 2011) AVATAR State machines: automatically connect new elements when added. Implemented since build 7245.</li>
<br>
<li> <b>Req #023</b> (March, 4, 2011) DIPLODOCUS component diagram: when modifying the attributes of a primitive port, automatically update the information of the connected port.</li>
<br>
<li> <b>Req #022</b> (February, 4, 2011) AVATAR requirements: adding attributes to requirements:  source = (innovation, marketing, technique, client) and status = (validated, pending).</li>
<br>
<li> <b>Req #021</b> (February, 4, 2011) AVATAR: adding the possibility to verify whether a system can go back to its initial state, or not.</li>
<br>
<li> <b>Req #020</b> (January, 27, 2011, and May, 24, 2011) AVATAR: adding the possibility to link a comment to a transition between states, or to a guard and actions of transitions. Also, improve the automatic positioning of the guards. More generally, connecting a comment to links might be useful.</li>
<br>
<li><b>Req #019</b> (January, 27, 2011): SysML RD: automatically increment the ID of Requirement, when creating a new one, automatic return carriage in text of requirements, and possibility to change the name of the requirements in the same dialog as the one used to modify the attributes of a rquirement. [ID increment implemented since build 7205]</li>
<br>
<li><b>Req #018</b> (January, 26, 2011): Use Case Diagrams: it should be possible to attach use cases inside of the system boundary</li>
<br>
</ul>
<br>
<hr>
<h2 id="func"> Requested Functionalities (2010) </h2>
<ul>
<li><b>Req #017</b> (July, 20, 2010): DIPLODOCUS: link DIPLODCUS models with simulink ones? [Request must be completed before it can be taken into account]</li>
<br>
<li><b>Req #016</b> (July, 13, 2010): DIPLODOCUS: mapping on domains, notion of domains [Request must be completed before it can be taken into account]</li>
<br>
<li><b>Req #015</b> (July, 1, 2010): DIPLODOCUS: events automatically added to channels [Request must be completed before it can be taken into account]</li>
<br>
<li><b>Req #014</b> (July, 1, 2010): DIPLODOCUS: support for arrays?</li>
<br>
<li><b><strike>Req #013</strike></b> (July, 1, 2010): DIPLODOCUS: support of records / data structure, with no reference to another record from a given record Implemented since build 5282</li>
<br>
<li><b><strike>Req #012</strike></b> (July, 1, 2010): DIPLODOCUS: add more parameters to events and requests. Implemented since build 5282</li>
<br>
<li><b>Req #011</b> (May, 12, 2010): DIPLODOCUS: propose a way to see previous simulation results at architecture level, and to desactivate them whenever necessary.</li>
<br>
<li><b>Req #010</b> (May, 11, 2010): DIPLODOCUS: add the possibility to have the increment part of "for" operators to be empty, e.g, for(i=0; i<2;)</li>
<br>
<li><b><strike>Req #009</strike></b> (May, 2010): DIPLODOCUS: add a new random sequence operator. Implemented since build 4156</li>
<br>
<li><b><strike>Req #008</strike></b> (April, 2010): Eliminate all non-necessary text outputs of TTool. Implemented since build 5279</li>
<br>
<li><b>Req #007</b> (April, 2010): Propose a multi-user installation of TTool.</li>
</ul>
<br>
<hr>

<h2 id="func"> Requested Functionalities (2009) </h2>

<ul>
<li><b>Req #006</b>: (November, 25, 2009): When pasting elements in a diagram, those elements shall be selected in that new diagram, so that they can be easily moved</li>
<li><b><strike>Req #005</strike></b>: (June, 5, 2009): Open the diagram on which an command update has just been made, when simulating DIPLODOCUS diagrams. Implemented since build 3114.</li>
<br>
<li><b>Req #004</b>: (June, 4, 2009): Selection of a whole diagram</li>
<br>
<li><b>Req #003</b>: (May, 4, 2009): TURTLE: Non-deterministic operator for setting a variable (i.e., a random ...)</li>
<br>
<li><b><strike>Req #002</strike></b>: (April, 24, 2009): graphical toolkit for interactive control of the C++ simulator. Implemented since build 3019.</li>
<br>
<li><b><strike>Req #001</strike></b>: (April, 15, 2009): text-based interface to the C++ simulator. Implemented since build 2510.</li>
<br>
<li><b><strike>Req #001</strike></b>: (April, 15, 2009): text-based interface to the C++ simulator. Implemented since build 2510.</li>
</ul>

<br>



)