/* Generated By:JJTree&JavaCC: Do not edit this line. TMLExprParserConstants.java */
public interface TMLExprParserConstants {

  int EOF = 0;
  int SINGLE_LINE_COMMENT = 6;
  int FORMAL_COMMENT = 7;
  int MULTI_LINE_COMMENT = 8;
  int ABSTRACT = 9;
  int BOOLEAN = 10;
  int TRUE = 11;
  int FALSE = 12;
  int ASSIGNMENT_NAT = 13;
  int ASSIGNMENT_BOOL = 14;
  int ASSIGNMENT_QUEUE_NAT = 15;
  int GUARD = 16;
  int ACTION_NAT = 17;
  int ACTION_BOOL = 18;
  int ACTION_QUEUE_NAT = 19;
  int ACTION_GATE = 20;
  int ACTION_GATE_VALUE = 21;
  int NAT_ID = 22;
  int NAT_NUMERAL = 23;
  int NAT_TYPE = 24;
  int BOOL_TYPE = 25;
  int QUEUE_NAT_TYPE = 26;
  int ENQUEUE = 27;
  int DEQUEUE = 28;
  int EMPTY = 29;
  int FIRST = 30;
  int LAST = 31;
  int DESTROY = 32;
  int ASSIGN = 33;
  int GT = 34;
  int LT = 35;
  int BANG = 36;
  int TILDE = 37;
  int HOOK = 38;
  int COLON = 39;
  int EQ = 40;
  int LE = 41;
  int GE = 42;
  int NE = 43;
  int SC_OR = 44;
  int SC_AND = 45;
  int INCR = 46;
  int DECR = 47;
  int PLUS = 48;
  int MINUS = 49;
  int STAR = 50;
  int SLASH = 51;
  int BIT_AND = 52;
  int BIT_OR = 53;
  int XOR = 54;
  int REM = 55;
  int LSHIFT = 56;
  int RSIGNEDSHIFT = 57;
  int RUNSIGNEDSHIFT = 58;
  int PLUSASSIGN = 59;
  int MINUSASSIGN = 60;
  int STARASSIGN = 61;
  int SLASHASSIGN = 62;
  int ANDASSIGN = 63;
  int ORASSIGN = 64;
  int XORASSIGN = 65;
  int REMASSIGN = 66;
  int LSHIFTASSIGN = 67;
  int RSIGNEDSHIFTASSIGN = 68;
  int RUNSIGNEDSHIFTASSIGN = 69;
  int AND = 70;
  int OR = 71;
  int NOT = 72;
  int MIN = 73;
  int MAX = 74;
  int DIV = 75;
  int MOD = 76;
  int NATURAL_LITERAL = 77;
  int QUEUE_LITERAL = 78;
  int IDENTIFIER = 79;
  int LETTER = 80;
  int DIGIT = 81;
  int LPAREN = 82;
  int RPAREN = 83;
  int COMMA = 84;
  int LBRACKET = 85;
  int RBRACKET = 86;
  int LBRACE = 87;
  int RBRACE = 88;

  int DEFAULT = 0;

  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\f\"",
    "<SINGLE_LINE_COMMENT>",
    "<FORMAL_COMMENT>",
    "<MULTI_LINE_COMMENT>",
    "\"abstract\"",
    "\"boolean\"",
    "\"true\"",
    "\"false\"",
    "\"assnat\"",
    "\"assbool\"",
    "\"assqueuenat\"",
    "\"guard\"",
    "\"actionnat\"",
    "\"actionbool\"",
    "\"actionqueuenat\"",
    "\"actiongate\"",
    "\"actiongatevalue\"",
    "\"natid\"",
    "\"natnumeral\"",
    "\"nat\"",
    "\"bool\"",
    "\"queue_nat\"",
    "\"Enqueue\"",
    "\"Dequeue\"",
    "\"Empty\"",
    "\"First\"",
    "\"Last\"",
    "\"Destroy\"",
    "\"=\"",
    "\">\"",
    "\"<\"",
    "\"!\"",
    "\"~\"",
    "\"?\"",
    "\":\"",
    "\"==\"",
    "\"<=\"",
    "\">=\"",
    "\"!=\"",
    "\"||\"",
    "\"&&\"",
    "\"++\"",
    "\"--\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"&\"",
    "\"|\"",
    "\"^\"",
    "\"%\"",
    "\"<<\"",
    "\">>\"",
    "\">>>\"",
    "\"+=\"",
    "\"-=\"",
    "\"*=\"",
    "\"/=\"",
    "\"&=\"",
    "\"|=\"",
    "\"^=\"",
    "\"%=\"",
    "\"<<=\"",
    "\">>=\"",
    "\">>>=\"",
    "\"and\"",
    "\"or\"",
    "\"not\"",
    "\"min\"",
    "\"max\"",
    "\"div\"",
    "\"mod\"",
    "<NATURAL_LITERAL>",
    "\"Nil\"",
    "<IDENTIFIER>",
    "<LETTER>",
    "<DIGIT>",
    "\"(\"",
    "\")\"",
    "\",\"",
    "\"[\"",
    "\"]\"",
    "\"{\"",
    "\"}\"",
    "\"=<\"",
  };

}
