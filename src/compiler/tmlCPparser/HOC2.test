INCLUDE "toto.cplib"
INCLUDE "/home/enrici/TURTLE/parser/totoo.cplib"
INCLUDE "TURTLE/parser/toto.cplib"
INCLUDE "./TURTLE/parser/toto.cplib"

SampleScenario( sourceMEM, destMEM, mainCPU, bus )

COMMUNICATION_PATTERN SampleCP1
	ACTIVITY sc1, sc2, sc3, sc4, sc5, sc6
#	SCENARIO sample_scenario
	INT toto, toto2, toto_3
	BOOL pippo, boolean, cond0, cond1, cond2, cond3, condition
	toto = 1
	toto2 = 2
	toto_3 = 3
	boolean = FALSE
	pippo = TRUE
	cond0 = TRUE
	cond1 = TRUE
	cond2 = TRUE
	cond3 = TRUE
	condition = TRUE

	MAIN
	<>; {sc1 ; { sc2 * {sc3[cond0] * sc4}} ; {sc5[cond1 && [cond2 || cond3]]}}
	<sc1, sc2, sc3>; {sc5 * sc6}[ condition ] 
	END
END

START ACTIVITY sc1
	ACTIVITY sc2, sc3, sc4, sc5, sc6
	INT toto, toto2, toto_3
	BOOL pippo, boolean, cond0, cond1, cond2, cond3, condition
	toto = 1
	toto2 = 1
	toto_3 = 1
	boolean = FALSE
	pippo = TRUE
	cond0 = TRUE
	cond1 = TRUE
	cond2 = TRUE
	cond3 = TRUE
	condition = TRUE

	MAIN
	<>; {{ sc2 * {sc3[cond0] * sc4}} ; {sc5[cond1 && [cond2 || cond3]]}}
	<sc1, sc2, sc3>; {sc5 * sc6}[ condition ] 
	END
END

START ACTIVITY sc2
	ACTIVITY sc1, sc3, sc4, sc5, sc6
	INT toto, toto2, toto_3
	BOOL pippo, boolean, cond0, cond1, cond2, cond3, condition
	toto = 1
	toto2 = 1
	toto_3= 1
	boolean = FALSE
	pippo = TRUE
	cond0 = TRUE
	cond1 = TRUE
	cond2 = TRUE
	cond3 = TRUE
	condition = TRUE

	MAIN
	<>; {sc1 ; { {sc3[cond0] * sc4}} ; {sc5[cond1 && [cond2 || cond3]]}}
	<sc1, sc2, sc3>; {sc5 * sc6}[ condition ] 
	END
END

START ACTIVITY sc3
	ACTIVITY sc1, sc2, sc4, sc5, sc6
	INT toto, toto2, toto_3
	BOOL pippo, boolean, cond0, cond1, cond2, cond3, condition
	toto = 1
	toto2 = 1
	toto_3= 1
	boolean = FALSE
	pippo = TRUE
	cond0 = TRUE
	cond1 = TRUE
	cond2 = TRUE
	cond3 = TRUE
	condition = TRUE

	MAIN
	<>; {sc1 ; { sc2 * sc4} ; {sc5[cond1 && [cond2 || cond3]]}}
	<sc1, sc2, sc3>; {sc5 * sc6}[ condition ] 
	END
END

START ACTIVITY sc4
	ACTIVITY sc1, sc2, sc3, sc5, sc6#, sc7
	INT toto, toto2, toto_3
	BOOL pippo, boolean, cond0, cond1, cond2, cond3, condition
	toto = 1
	toto2 = 1
	toto_3= 1
	boolean = FALSE
	pippo = TRUE
	cond0 = TRUE
	cond1 = TRUE
	cond2 = TRUE
	cond3 = TRUE
	condition = TRUE

	MAIN
	<>; {sc1 ; { sc2 * sc3[cond0]} ; {sc5[cond1 && [cond2 || cond3]]}}
	<sc1, sc2, sc3>; {sc5 * sc6}[ condition ] 
	END
END

START ACTIVITY sc5
	ACTIVITY sc1, sc2, sc3, sc4, sc6
	INT toto, toto2, toto_3
	BOOL pippo, boolean, cond0, cond1, cond2, cond3, condition
	toto = 1
	toto2 = 1
	toto_3 = 1
	boolean = FALSE
	pippo = TRUE
	cond0 = TRUE
	cond1 = TRUE
	cond2 = TRUE
	cond3 = TRUE
	condition = TRUE

	MAIN
	<>; {sc1 ; { sc2 * {sc3[cond0] * sc4}} }
	<sc1, sc2, sc3>; {sc6}[ condition ] 
	END
END

START ACTIVITY sc6
	ACTIVITY sc1, sc2, sc3, sc4, sc5
	SCENARIO SampleScenario1, SampleScenario2
	INT toto, toto2, toto_3
	BOOL pippo, boolean, cond0, cond1, cond2, cond3, condition
	toto = 1
	toto2 = 1
	toto_3= 1
	boolean = FALSE
	pippo = TRUE
	cond0 = TRUE
	cond1 = TRUE
	cond2 = TRUE
	cond3 = TRUE
	condition = TRUE

	MAIN
	<>; {sc1 ; { sc2 * {sc3[cond0] * sc4}} ; {sc5[cond1 && [cond2 || cond3]]}}
	<sc1, sc2, sc3>; {sc5}[ condition ] 
	END
END

SCENARIO SampleScenario1
	#Supernodes declaration
	
	STORAGE SRCstorage, DSTstorage
	CONTROLLER Controller
	TRANSFER Transfer1
	
	#Declaration of variables for action parameters
	INT SIZE
	INT ID1

	SIZE = 1024 	#1024 items will be transferred
	ID1 = 0				#label used to distinguish the belonging to a particular	scenario, maybe it is not needed!

	#List of actions, syntax is: ActionName( SRC_actor, DST_actor, list of parameters )

	MAIN
		TransferRequest( Controller, Transfer1, ID1, SIZE );
		Transfer( Transfer1, SRCstorage, ID1, SIZE );
		Transfer( SRCstorage, Transfer1, ID1, SIZE );
		Transfer( Transfer1, DSTstorage, ID1, SIZE );
		TransferDone( Transfer1, Controller, ID1 );
	END
END

SCENARIO SampleScenario2
	#Supernodes declaration
	
	STORAGE SRCstorage, DSTstorage
	CONTROLLER Controller
	TRANSFER Transfer1
	
	#Declaration of variables for action parameters
	INT SIZE
	INT ID1

	SIZE = 1024 	#1024 items will be transferred
	ID1 = 0				#label used to distinguish the belonging to a particular	scenario, maybe it is not needed!

	#List of actions, syntax is: ActionName( SRC_actor, DST_actor, list of parameters )

	MAIN
		TransferRequest( Controller, Transfer1, ID1, SIZE );
		Transfer( Transfer1, SRCstorage, ID1, SIZE );
		Transfer( SRCstorage, Transfer1, ID1, SIZE );
		Transfer( Transfer1, DSTstorage, ID1, SIZE );
		TransferDone( Transfer1, Controller, ID1 );
	END
END
#up to now I am parsing (only parsing, no semantic check) variable must be separately declared and initialized.
