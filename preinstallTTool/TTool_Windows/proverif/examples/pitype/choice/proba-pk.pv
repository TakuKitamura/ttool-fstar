(*************************************************************
 *                                                           *
 *  Cryptographic protocol verifier                          *
 *                                                           *
 *  Bruno Blanchet and Vincent Cheval                        *
 *                                                           *
 *  Copyright (C) INRIA, CNRS 2000-2014                      *
 *                                                           *
 *************************************************************)

(*

    This file is free software; you can redistribute it and/or modify
    it under the terms of the BSD License.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    BSD license for more details (in file LICENSEBSD).

*)
type skey.
type pkey.
type seed.
type block.
type encblock.

(* Probabilistic public-key encryption *)

fun pk(skey): pkey.
fun enc(block, pkey, seed): encblock.
fun dec(encblock, skey): block.
equation forall x: block, y: skey, z: seed;  dec(enc(x, pk(y), z), y) = x.


free c,c2: channel.

process
	new s: skey;
	(
	  out(c, pk(s))
	|
	  !
	  in(c2, x: block);
	  new a: seed;
	  new r: encblock;
	  out(c, choice[enc(x, pk(s), a), r])
	)
