(*************************************************************
 *                                                           *
 *  Cryptographic protocol verifier                          *
 *                                                           *
 *  Bruno Blanchet and Vincent Cheval                        *
 *                                                           *
 *  Copyright (C) INRIA, CNRS 2000-2014                      *
 *                                                           *
 *************************************************************)

(*

    This file is free software; you can redistribute it and/or modify
    it under the terms of the BSD License.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    BSD license for more details (in file LICENSEBSD).

*)
(* Basic weak secret example, from JLAP paper
   Corrected version *)

type skey.
type pkey.
type seed.
type passwd.

(* Probabilistic public-key encryption *)

fun pk(skey): pkey.
fun penc(bitstring, pkey, seed): bitstring.
fun pdec(bitstring, skey): bitstring.
equation forall x: bitstring, y: skey, z: seed;  pdec(penc(x, pk(y), z), y) = x.

(* Hash function *)

fun h(passwd): bitstring.

free c: channel.
free w: passwd [private].

weaksecret w.

process
	new s: skey;
	new a: seed;
	out(c, pk(s));
	out(c, penc(h(w), pk(s), a))
