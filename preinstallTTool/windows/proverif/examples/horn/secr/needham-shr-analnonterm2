(*************************************************************
 *                                                           *
 *  Cryptographic protocol verifier                          *
 *                                                           *
 *  Bruno Blanchet and Vincent Cheval                        *
 *                                                           *
 *  Copyright (C) INRIA, CNRS 2000-2014                      *
 *                                                           *
 *************************************************************)

(*

    This file is free software; you can redistribute it and/or modify
    it under the terms of the BSD License.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    BSD license for more details (in file LICENSEBSD).

*)
(* Needham Shroeder shared key protocol *)

param verboseRules = yes.

pred c/1 elimVar, decompData.

fun encrypt/2.
fun decr/1.

query c:secretA[].

(* The analyzer finds automatically:
nounif c:x.
nounif c:encrypt(x,k[]).

These nounif are necessary:
c:encrypt(n,k[]) -> c:encrypt(decr(n),k[])
c:encrypt(v3,k[]) -> c:decr(v3)
=> loop
*)

reduc

c:k & c:encrypt(m,k) -> c:m;
c:encrypt(n, k[]) -> c:encrypt(decr(n), k[]);
c:encrypt(k[], Ks2).

